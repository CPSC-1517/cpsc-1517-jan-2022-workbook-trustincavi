@page "{searcharg?}"
@model WebApp.Pages.Samples.PartialFilterSearchModel
@{
    ViewData["Title"] = "Partial String Table Query";
}
<h1>Partial String query resulting in a Table display</h1>

<p>@Model.Feedback</p>

<form method="post">
    <label>
        Enter a partial Territory description:
        <input type="text" asp-for="searcharg"
               placeholder="enter your description" />
    </label>
    <br />

    @* Restrict the display of the table to when there is data to view*@
    @if (Model.TerritoryInfo != null)
    {
        if (Model.TerritoryInfo.Count == 0)
        {
            <p style="color: blueviolet; font-weight: bold; font-size: large;">
                There are no territory matching your search request.
            </p>
        }
        else
        {
            <table>
                <thead>
                    @*used for column titles*@
                    <tr>
                        <th>Territory</th>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @*used for the table details
                        the number of rows are unsually unknown for a db query
                    *@
                    
                    @foreach (var item in Model.TerritoryInfo)
                    {
                        <tr>
                            <td>
                                @*
                                    Example of passing value between pages.
                                    Get Don's comments here...
                                *@
                                <a href="/Samples/ReceivingPage/@item.TerritoryID">
                                Edit this Territory: @item.TerritoryID
                                </a>
                            </td>
                            <td>@item.TerritoryDescription</td>
                            <td>
                                <select disabled="true">
                                    @{
                                        foreach (var region in Model.RegionList)
                                        {
                                            if (region.RegionID == item.RegionID)
                                            {
                                                <option value="@region.RegionID" selected>@region.RegionDescription</option>
                                            }
                                            else
                                            {
                                                <option value="@region.RegionID">@region.RegionDescription</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @*used for summay table information eg totals*@
                    <tr>
                        <td colspan="3">
                            @{
                                // The pageRef id the string representation of the value to be displayed.
                                // The string maybe a character line: Next
                                // The string maybe a numeric: 4
                                // Ex: First Previous 1 2 3 4 5 Next Last
                                foreach (var pageRef in Model.Pager)
                                {
                                    if (pageRef == Model.Pager.CurrentPage)
                                    {
                                        <b>@pageRef.Text</b>
                                    }
                                    else
                                    {
                                        // Create an anchor tag to move to the desired collection page.
                                        // The target of the anchor destination is your current web cshtml
                                        //  this will cause an OnGet issue.
                                        // .Page is the numeric representation of the desired page.
                                        <a
                                            title="Page @pageRef.Page" 
                                            asp-page="/Samples/PartialFilterSearch"
                                            asp-route-currentpage="@pageRef.Page">
                                            @pageRef.Text
                                        </a>
                                    }
                                }
                            }
                        </td>
                    </tr>
                </tfoot>
            </table>
        }
    }
    <button type="submit" asp-page-handler="Fetch">Fetch Territories</button>&nbsp;&nbsp;
    <button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button>
    <button type="submit" asp-page-handler="New" formnovalidate>New Territory</button>

</form>
