@page "{RegionID?}"
@model WebApp.Pages.Samples.RegionQueryOneModel
@{
    ViewData["Title"] = "PKey Region Query";
}

<h1>Query: Region query by Primary Key</h1>

<p>@Model.FeedbackMessage</p>

<form method="post">
    <label>
        @* The type attribute can be set to different input for acceptable value
            "number" restricts input to numerics.
            The numerics are by default whole numbers, can be negative/positive.
            Additional attributes can be used to refine the accceptable values.

            - min="xxx"/max="xxx": indicates the minimum/maximum acceptable value.

            - step="xxx": indicates the increments of the acceptable values.
            step="1" (default) whole numbers increments of (1,2,3,...)
            step="0.01" decimal numbers increments of 0.01, this is great for money amounts.

            - required: indicates that the fields must have a value.

            -->> user MUST meet the validation attributes BEFORE the form is sent to the web server for processing.


            - The attibute "formnovalidate" override any validation (html5) that exists on the form controls.
        *@
        Enter Region ID:
        @*        <input type="number" asp-for="RegionID"
            placeholder="Enter your region id number"
            min="1" step="1" required/>*@

        <input type="number" asp-for="RegionID"
               placeholder="Enter your region id number"
               step="1" required />
    </label>
    <label>
        Select a Region:
        <select asp-for="SelectRegion">
            @* if you do not indicate a specific option to display
                then the list defaults to the first option line
            *@
            <option value="0">select ... </option>
            @foreach (var item in Model.RegionsList)
            {
                //to retain the selection, you need to specify a row to be
                //  the selected option
                //this is done with the selected attribute on the value
                if (item.RegionID == Model.RegionID)
                {
                    <option value="@item.RegionID" selected>@item.RegionDescription</option>

                }
                else
                {
                    <option value="@item.RegionID">@item.RegionDescription</option>
                }
            }
        </select>
    </label>
    <br />
    <button type="submit" asp-page-handler="Fetch">Fetch By Id</button>&nbsp;&nbsp;
    <button type="submit" asp-page-handler="Select" formnovalidate>Select By Description</button>&nbsp;&nbsp;
    <button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button>
</form>